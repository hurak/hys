---
title: "Why another framework?"
format:
    html:
        html-math-method: katex
---

We are going to introduce yet another framework for modeling hybrid systems â€“ *mixed logical dynamical (MLD)* description. A question must inevitably pop up: "why yet another framework?"

The answer is, that we would like to have a model of a hybrid system that is suitable for model predictive control (MPC). Recall that the role of the model in MPC is that the model is used to define some constraints (equations and inequalities) in the numerical optimization problem. The frameworks that we considered so far did not offer it. 

In particular, with the state variable and control input vectors composed of continuous and discrete variables
$$
\bm x = \begin{bmatrix}\bm x_c\\\bm x_d\end{bmatrix}, \quad \bm u = \begin{bmatrix}\bm u_c\\\bm u_d\end{bmatrix},
$$
where $\bm x_c\in\mathbb R^{n_c},\;\bm x_d\in\mathbb N^{n_d},\; \bm u_c\in\mathbb R^{m_c}$ and $\bm u_d\in\mathbb N^{m_d}$, we would like to formulate the model in the form of state equations, say
$$
\begin{aligned}
\begin{bmatrix}\bm x_c(k+1) \\ \bm x_d(k+1)\end{bmatrix}
 &= 
\begin{bmatrix} \mathbf f_c(\bm x(k), \bm u(k)) \\ \mathbf f_d(\bm x(k), \bm u(k)) \end{bmatrix}
\end{aligned}
$$

Is it possible? 

Unfortunately no. At least not exactly in this form. But something close to it is achievable instead. 

But first we need to set the terminology and notation used to define a discrete(-time) hybrid automaton.