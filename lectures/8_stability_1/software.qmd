---
title: "Software"
bibliography: 
    - ../references/ref_polynomial.bib
    - ../references/ref_LMI.bib
    - ../references/ref_stability.bib
format:
    html:
        html-math-method: katex
        code-fold: true
---

In our course we formulated the problem of checking the stability as that of constructing a Lyapunov function, which in turn was formulated as a problem of solving the optimization problem of type *semidefinite programming* (with *linear matrix inequalities, LMI*) or type *positive (nonnegative) polynomial programming* (via *sum-of-squares (SOS) programming*). Hence, we need to be able to formulate and solve those optimization problems.

### Matlab

- [CVX](https://cvxr.com/cvx/)
- [YALMIP](https://yalmip.github.io) 
    - [Tutorial for semidefinite programming](https://yalmip.github.io/tutorial/semidefiniteprogramming/)
    - [Tutorial for sum-of-squares programming](https://yalmip.github.io/tutorial/sumofsquaresprogramming/)
- [SOSTOOLS](https://github.com/oxfordcontrol/SOSTOOLS)

### Julia

- [Convex.jl](https://jump.dev/Convex.jl/stable/)
- [JuMP.jl](https://github.com/jump-dev/JuMP.jl)
- [SumOfSquares.jl](https://github.com/jump-dev/SumOfSquares.jl)

### Python

- [CVXPY](https://www.cvxpy.org)
    - [Tutorial for semidefinite programming](https://www.cvxpy.org/examples/basic/sdp.html) 